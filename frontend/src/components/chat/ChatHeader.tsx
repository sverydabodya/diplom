import { useAuth } from "../AuthProvider";
import { leaveGroupChat } from "../../network/chat_api";
import { useState } from "react";
import { useNavigate } from "react-router-dom";
import GroupChatMenu from "./GroupChatMenu";

interface ChatHeaderProps {
	chat: {
		id: string;
		name?: string;
		users: any[];
		createdAt: Date;
		createdBy?: string;
	};
	onDeleteChat: (chatId: string) => Promise<void>;
	onChatUpdate?: () => void;
	onSearchClick?: () => void;
	onMobileMenuToggle?: () => void;
}

export default function ChatHeader({
	chat,
	onDeleteChat,
	onChatUpdate,
	onSearchClick,
	onMobileMenuToggle,
}: ChatHeaderProps) {
	const { user } = useAuth();
	const [isGroupMenuOpen, setIsGroupMenuOpen] = useState(false);
	const navigate = useNavigate();

	// –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —á–∞—Ç—ñ
	const otherUser = chat.users.find((u: any) => u.id !== user?.id);

	// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è, —á–∏ —î –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–≤–æ—Ä—é–≤–∞—á–µ–º –≥—Ä—É–ø–æ–≤–æ–≥–æ —á–∞—Ç—É
	const isCreator = () => {
		if (!chat.name) return false; // –ù–µ –≥—Ä—É–ø–æ–≤–∏–π —á–∞—Ç

		// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ–ª–µ createdBy –¥–ª—è –≥—Ä—É–ø–æ–≤–∏—Ö —á–∞—Ç—ñ–≤
		return chat.createdBy === user?.id;
	};

	// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É "–æ—Å—Ç–∞–Ω–Ω—ñ–π —Ä–∞–∑ –±–∞—á–∏–ª–∏"
	const getLastSeenText = (lastSeen: Date) => {
		const lastSeenDate = new Date(lastSeen);
		const now = new Date();
		const diffInMinutes = Math.floor(
			(now.getTime() - lastSeenDate.getTime()) / (1000 * 60)
		);

		if (diffInMinutes < 1) {
			return "—â–æ–π–Ω–æ";
		} else if (diffInMinutes < 60) {
			return `${diffInMinutes}—Ö–≤ —Ç–æ–º—É`;
		} else if (diffInMinutes < 1440) {
			const hours = Math.floor(diffInMinutes / 60);
			return `${hours}–≥ —Ç–æ–º—É`;
		} else {
			const days = Math.floor(diffInMinutes / 1440);
			return `${days}–¥ —Ç–æ–º—É`;
		}
	};

	const handleDeleteChat = async () => {
		if (
			window.confirm(
				"–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π —á–∞—Ç? –¶—è –¥—ñ—è –Ω–µ–∑–≤–æ—Ä–æ—Ç–Ω–∞."
			)
		) {
			try {
				await onDeleteChat(chat.id);
			} catch (error) {
				console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ —á–∞—Ç—É:", error);
			}
		}
	};

	const handleLeaveGroupChat = async () => {
		if (
			window.confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏ –∑ —Ü—å–æ–≥–æ –≥—Ä—É–ø–æ–≤–æ–≥–æ —á–∞—Ç—É?")
		) {
			try {
				await leaveGroupChat(chat.id);
				// –í–∏–∫–ª–∏–∫–∞—î–º–æ callback –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑–∞–º—ñ—Å—Ç—å –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
				if (onChatUpdate) {
					onChatUpdate();
				}
			} catch (error) {
				console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ –∑ –≥—Ä—É–ø–æ–≤–æ–≥–æ —á–∞—Ç—É:", error);
				alert("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ –∑ –≥—Ä—É–ø–æ–≤–æ–≥–æ —á–∞—Ç—É");
			}
		}
	};

	const handleChatUpdate = () => {
		// –í–∏–∫–ª–∏–∫–∞—î–º–æ callback –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑–∞–º—ñ—Å—Ç—å –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
		if (onChatUpdate) {
			onChatUpdate();
		}
	};

	const handleOpenProfile = () => {
		if (otherUser) {
			navigate(`/user-profile/${otherUser.id}`);
		}
	};

	return (
		<>
			<div className="h-16 bg-[#17212B] border-b border-[#2F3B4A] flex-shrink-0 flex items-center px-6">
				<div className="flex items-center space-x-4 w-full max-w-4xl mx-auto">
					<div className="relative">
						<div className="w-10 h-10 rounded-full bg-[#2AABEE] flex items-center justify-center">
							<span className="text-white text-lg font-medium">
								{chat.name
									? chat.name.charAt(0).toUpperCase()
									: otherUser?.name?.charAt(0).toUpperCase() || "–ß"}
							</span>
						</div>
						{/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å—É —Ç—ñ–ª—å–∫–∏ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö —á–∞—Ç—ñ–≤ */}
						{!chat.name && otherUser?.isOnline && (
							<div className="absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 rounded-full border-2 border-[#17212B]"></div>
						)}
					</div>
					<div className="flex-1">
						<h2
							className={`text-lg font-semibold text-white ${
								chat.name
									? "cursor-pointer hover:text-[#2AABEE] transition-colors"
									: ""
							}`}
							onClick={() => {
								if (chat.name) {
									setIsGroupMenuOpen(true);
								}
							}}
							title={chat.name ? "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —á–∞—Ç–æ–º" : ""}
						>
							{chat.name ? chat.name : otherUser?.name}
						</h2>
						<div className="flex items-center space-x-2">
							{chat.name ? (
								// –î–ª—è –≥—Ä—É–ø–æ–≤–∏—Ö —á–∞—Ç—ñ–≤ –ø–æ–∫–∞–∑—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤
								<>
									<div className="w-2 h-2 bg-blue-500 rounded-full"></div>
									<p className="text-sm text-[#7D8E98]">
										{chat.users.length} —É—á–∞—Å–Ω–∏–∫—ñ–≤
									</p>
								</>
							) : otherUser?.isOnline ? (
								// –î–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö —á–∞—Ç—ñ–≤ –ø–æ–∫–∞–∑—É—î–º–æ –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å
								<>
									<div className="w-2 h-2 bg-green-500 rounded-full"></div>
									<p className="text-sm text-green-400">–û–Ω–ª–∞–π–Ω</p>
								</>
							) : otherUser?.lastSeen ? (
								// –î–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö —á–∞—Ç—ñ–≤ –ø–æ–∫–∞–∑—É—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É
								<>
									<div className="w-2 h-2 bg-gray-500 rounded-full"></div>
									<p className="text-sm text-[#7D8E98]">
										–û—Å—Ç–∞–Ω–Ω—ñ–π —Ä–∞–∑ {getLastSeenText(otherUser.lastSeen)}
									</p>
								</>
							) : (
								// –î–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö —á–∞—Ç—ñ–≤ –ø–æ–∫–∞–∑—É—î–º–æ –æ—Ñ–ª–∞–π–Ω
								<>
									<div className="w-2 h-2 bg-gray-500 rounded-full"></div>
									<p className="text-sm text-[#7D8E98]">–û—Ñ–ª–∞–π–Ω</p>
								</>
							)}
						</div>
					</div>
					<div className="flex space-x-2">
						{/* –ö–Ω–æ–ø–∫–∞ –ø–æ—à—É–∫—É –¥–ª—è –≤—Å—ñ—Ö —á–∞—Ç—ñ–≤ */}
						<button
							onClick={onSearchClick}
							className="p-2 rounded-full hover:bg-[#2F3B4A] transition-colors duration-200"
							title="–ü–æ—à—É–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"
						>
							üîç
						</button>

						{chat.name ? (
							// –ì—Ä—É–ø–æ–≤–∏–π —á–∞—Ç
							isCreator() ? (
								// –°—Ç–≤–æ—Ä–∏—Ç–µ–ª—å –≥—Ä—É–ø–æ–≤–æ–≥–æ —á–∞—Ç—É - –º–æ–∂–µ –≤–∏–¥–∞–ª–∏—Ç–∏
								<button
									onClick={handleDeleteChat}
									className="p-2 rounded-full hover:bg-red-600 transition-colors duration-200"
									title="–í–∏–¥–∞–ª–∏—Ç–∏ –≥—Ä—É–ø–æ–≤–∏–π —á–∞—Ç"
								>
									üóëÔ∏è
								</button>
							) : (
								// –£—á–∞—Å–Ω–∏–∫ –≥—Ä—É–ø–æ–≤–æ–≥–æ —á–∞—Ç—É - –º–æ–∂–µ –≤–∏–π—Ç–∏
								<button
									onClick={handleLeaveGroupChat}
									className="p-2 rounded-full hover:bg-orange-600 transition-colors duration-200"
									title="–í–∏–π—Ç–∏ –∑ –≥—Ä—É–ø–æ–≤–æ–≥–æ —á–∞—Ç—É"
								>
									–í–∏–π—Ç–∏
								</button>
							)
						) : (
							// –ü—Ä–∏–≤–∞—Ç–Ω–∏–π —á–∞—Ç - –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ—Ñ—ñ–ª—é —Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
							<>
								<button
									onClick={handleOpenProfile}
									className="p-2 rounded-full hover:bg-[#2F3B4A] transition-colors duration-200"
									title="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å"
								>
									–ø—Ä–æ—Ñ—ñ–ª—å
								</button>
								<button
									onClick={handleDeleteChat}
									className="p-2 rounded-full hover:bg-red-600 transition-colors duration-200"
									title="–í–∏–¥–∞–ª–∏—Ç–∏ —á–∞—Ç"
								>
									–≤–∏–¥–∞–ª–∏—Ç–∏
								</button>
							</>
						)}
					</div>
				</div>
			</div>

			{/* –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≥—Ä—É–ø–æ–≤–∏–º —á–∞—Ç–æ–º */}
			{chat.name && (
				<GroupChatMenu
					isOpen={isGroupMenuOpen}
					onClose={() => setIsGroupMenuOpen(false)}
					chat={chat}
					onChatUpdate={handleChatUpdate}
				/>
			)}
		</>
	);
}
